<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="api">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../../Applications/Eclipse.app/Contents/Eclipse/"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="Maven Dependencies.libraryclasspath">
        <pathelement location="../../../.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar"/>
        <pathelement location="../../../.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar"/>
        <pathelement location="../../../.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar"/>
        <pathelement location="../../../.m2/repository/org/springframework/security/spring-security-core/4.1.3.RELEASE/spring-security-core-4.1.3.RELEASE.jar"/>
        <pathelement location="../../../.m2/repository/org/springframework/spring-beans/4.3.2.RELEASE/spring-beans-4.3.2.RELEASE.jar"/>
        <pathelement location="../../../.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar"/>
        <pathelement location="../../../.m2/repository/pentaho/pentaho-connections/8.2.0.0-SNAPSHOT/pentaho-connections-8.2.0.0-SNAPSHOT.jar"/>
        <pathelement location="../../../.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar"/>
        <pathelement location="../../../.m2/repository/org/pentaho/actionsequence-dom/8.2.0.0-SNAPSHOT/actionsequence-dom-8.2.0.0-SNAPSHOT.jar"/>
        <pathelement location="../../../.m2/repository/jaxen/jaxen/1.1/jaxen-1.1.jar"/>
        <pathelement location="../../../.m2/repository/jdom/jdom/1.0/jdom-1.0.jar"/>
        <pathelement location="../../../.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar"/>
        <pathelement location="../../../.m2/repository/xerces/xercesImpl/2.6.2/xercesImpl-2.6.2.jar"/>
        <pathelement location="../../../.m2/repository/xom/xom/1.0/xom-1.0.jar"/>
        <pathelement location="../../../.m2/repository/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar"/>
        <pathelement location="../../../.m2/repository/xalan/xalan/2.6.0/xalan-2.6.0.jar"/>
        <pathelement location="../../../.m2/repository/com/ibm/icu/icu4j/2.6.1/icu4j-2.6.1.jar"/>
        <pathelement location="../../../.m2/repository/org/pentaho/commons-xul-core/8.2.0.0-SNAPSHOT/commons-xul-core-8.2.0.0-SNAPSHOT.jar"/>
        <pathelement location="../../../.m2/repository/org/pentaho/commons-database-model/8.2.0.0-SNAPSHOT/commons-database-model-8.2.0.0-SNAPSHOT.jar"/>
        <pathelement location="../../../.m2/repository/pentaho/pentaho-service-coordinator/8.2.0.0-SNAPSHOT/pentaho-service-coordinator-8.2.0.0-SNAPSHOT.jar"/>
        <pathelement location="../../../.m2/repository/junit/junit/4.12/junit-4.12.jar"/>
        <pathelement location="../../../.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"/>
        <pathelement location="../../../.m2/repository/org/mockito/mockito-all/1.8.5/mockito-all-1.8.5.jar"/>
    </path>
    <path id="api.classpath">
        <pathelement location="target/classes"/>
        <pathelement location="target/test-classes"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="target/classes"/>
        <mkdir dir="target/test-classes"/>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/java">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/resources">
                <exclude name="**/*.java"/>
                <exclude name="**"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/java">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="target/classes"/>
        <delete dir="target/test-classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/main/java"/>
            <src path="src/main/resources"/>
            <exclude name="**"/>
            <classpath refid="api.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/test/java"/>
            <classpath refid="api.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
</project>
